name: Production Deployment - Website
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID_WEBSITE }}
  TURBO_TOKEN: ${{ secrets.VERCEL_TOKEN }}
  TURBO_TEAM: ${{ secrets.VERCEL_ORG_ID }}
  # NODE_OPTIONS: --max-old-space-size=4096
on:
  push:
    branches:
      - main
    # paths:
    #   - apps/website/**
    #   - packages/**
      
jobs:
  deploy-production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: 🔦 Run linter
        run: bun run lint
        working-directory: ./apps/website
      - name: 🪐 Check TypeScript
        run: bun run typecheck
        working-directory: ./apps/website
      - name: 📤 Pull Vercel Environment Information
        run: bunx vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: 🔧 Setup Environment Variables
        run: |
          # Copy Vercel env file to expected location for build scripts
          cp .vercel/.env.production.local .env.prod
          # Set production environment
          echo "NEXT_PUBLIC_APP_ENV=production" >> .env.prod
      - name: 🏗 Build Workspace Packages
        run: bun run build prod
      - name: 🏗 Build Project Artifacts
        run: bunx vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: |
          bunx vercel deploy --prebuilt --prod --archive=tgz --token=${{ secrets.VERCEL_TOKEN }} > domain.txt
          bunx vercel alias --scope=${{ secrets.VERCEL_ORG_ID }} --token=${{ secrets.VERCEL_TOKEN }} set `cat domain.txt` chatmtv.com
